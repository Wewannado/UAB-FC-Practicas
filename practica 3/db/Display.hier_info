|Pis
Pis_actual[0] <= lpm_decode0:Decoder.eq0
Pis_actual[1] <= lpm_decode0:Decoder.eq1
Pis_actual[2] <= lpm_decode0:Decoder.eq2
Pis_actual[3] <= lpm_decode0:Decoder.eq3
Pis_actual[4] <= lpm_decode0:Decoder.eq4
Pis_actual[5] <= lpm_decode0:Decoder.eq5
Pis_actual[6] <= lpm_decode0:Decoder.eq6
Pis_actual[7] <= lpm_decode0:Decoder.eq7
Downup => lpm_counter1:3bitBidir_count.updown
CK => lpm_counter1:3bitBidir_count.clock
CK => lpm_counter0:2bit_count.clock
Enable => lpm_counter0:2bit_count.cnt_en
Enable => inst7.IN0
RST => inst8.IN0
RST => lpm_counter1:3bitBidir_count.aclr


|Pis|lpm_decode0:Decoder
data[0] => lpm_decode:lpm_decode_component.data[0]
data[1] => lpm_decode:lpm_decode_component.data[1]
data[2] => lpm_decode:lpm_decode_component.data[2]
eq0 <= lpm_decode:lpm_decode_component.eq[0]
eq1 <= lpm_decode:lpm_decode_component.eq[1]
eq2 <= lpm_decode:lpm_decode_component.eq[2]
eq3 <= lpm_decode:lpm_decode_component.eq[3]
eq4 <= lpm_decode:lpm_decode_component.eq[4]
eq5 <= lpm_decode:lpm_decode_component.eq[5]
eq6 <= lpm_decode:lpm_decode_component.eq[6]
eq7 <= lpm_decode:lpm_decode_component.eq[7]


|Pis|lpm_decode0:Decoder|lpm_decode:lpm_decode_component
data[0] => decode_s6f:auto_generated.data[0]
data[1] => decode_s6f:auto_generated.data[1]
data[2] => decode_s6f:auto_generated.data[2]
enable => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_s6f:auto_generated.eq[0]
eq[1] <= decode_s6f:auto_generated.eq[1]
eq[2] <= decode_s6f:auto_generated.eq[2]
eq[3] <= decode_s6f:auto_generated.eq[3]
eq[4] <= decode_s6f:auto_generated.eq[4]
eq[5] <= decode_s6f:auto_generated.eq[5]
eq[6] <= decode_s6f:auto_generated.eq[6]
eq[7] <= decode_s6f:auto_generated.eq[7]


|Pis|lpm_decode0:Decoder|lpm_decode:lpm_decode_component|decode_s6f:auto_generated
data[0] => w_anode19w[1].IN1
data[0] => w_anode41w[1].IN1
data[0] => w_anode63w[1].IN1
data[0] => w_anode85w[1].IN1
data[1] => w_anode30w[2].IN1
data[1] => w_anode41w[2].IN1
data[1] => w_anode74w[2].IN1
data[1] => w_anode85w[2].IN1
data[2] => w_anode52w[3].IN1
data[2] => w_anode63w[3].IN1
data[2] => w_anode74w[3].IN1
data[2] => w_anode85w[3].IN1
eq[0] <= w_anode1w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode19w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode30w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode41w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[4] <= w_anode52w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[5] <= w_anode63w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[6] <= w_anode74w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[7] <= w_anode85w[3].DB_MAX_OUTPUT_PORT_TYPE


|Pis|lpm_counter1:3bitBidir_count
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
updown => lpm_counter:lpm_counter_component.updown
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]


|Pis|lpm_counter1:3bitBidir_count|lpm_counter:lpm_counter_component
clock => cntr_reh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_reh:auto_generated.cnt_en
updown => cntr_reh:auto_generated.updown
aclr => cntr_reh:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_reh:auto_generated.q[0]
q[1] <= cntr_reh:auto_generated.q[1]
q[2] <= cntr_reh:auto_generated.q[2]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Pis|lpm_counter1:3bitBidir_count|lpm_counter:lpm_counter_component|cntr_reh:auto_generated
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
updown => counter_comb_bita0.DATAB
updown => counter_comb_bita1.DATAB
updown => counter_comb_bita2.DATAB


|Pis|lpm_counter0:2bit_count
aclr => lpm_counter:lpm_counter_component.aclr
clock => lpm_counter:lpm_counter_component.clock
cnt_en => lpm_counter:lpm_counter_component.cnt_en
cout <= lpm_counter:lpm_counter_component.cout
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]


|Pis|lpm_counter0:2bit_count|lpm_counter:lpm_counter_component
clock => cntr_a6j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_a6j:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_a6j:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_a6j:auto_generated.q[0]
q[1] <= cntr_a6j:auto_generated.q[1]
cout <= cntr_a6j:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|Pis|lpm_counter0:2bit_count|lpm_counter:lpm_counter_component|cntr_a6j:auto_generated
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT


